#!/usr/bin/env python
#
# review-ui <diff cmd> <diff dir> <diff index>
#
from Tkinter import *
from os import system, kill, chdir
from signal import SIGKILL
from subprocess import Popen
from sys import argv

import string

# Button click callback
def callback(idx, key):
    # xxx Bring existing diffs to the front
    # xxx Pass button ref in (weakref?)
    buts[idx].config(relief=SUNKEN)
    (k, v, name) = filPair[idx]
    if DIFFCMD == "tkdiff":
        args = [DIFFCMD, "-L"+name, k, v]
    else:
        args = [DIFFCMD, k, v]
    try:
        pids.append(Popen(args).pid)
    except OSError, ex:
        print >>sys.stderr, "Failed to execute:\n  '%s'\n%s" % \
                  (string.join(args), ex)


# Kill a the processes exec'd via button clicks
def killAll():
    try:
        for pid in pids: kill(pid, SIGKILL)
    except OSError:
        pass  # The child may have exited
    exit(0)


# Populate filPair using the given file
def loadFile(fileName):
    def parseKeyVal(line, idx):
        s = line.split(",")[idx].strip()
        if s == "null":
            s = "/dev/null"
        return s

    global filPair
    for line in file(fileName,"r"):
        k = parseKeyVal(line, 0)
        v = parseKeyVal(line, 1)
        path = parseKeyVal(line, 2)
        filPair.append((k,v,path))


filPair = []       # List of tuples of (old file, new file, file path)
pids = []          # Children exec'd by clicking buttons
buts = []
root = Tk()

DIFFCMD = argv[1]
chdir(argv[2])     # Button callback opens using rel paths
loadFile(argv[3])

# Create a button for each file pair
cnt = 0
for (key, val, name) in filPair:
    # xxx Would like to capture b in the closure rather than
    # have to save in buts. Unfortunately the tkinter widgets
    # don't pass self to the callbacks.
    b = Button(root, text=name, justify=LEFT, anchor=W, 
               command = lambda i=cnt, k=key: callback(i, k))
    b.pack(fill=BOTH, expand=1)
    buts.append(b)
    cnt = cnt + 1

Button(root, text="exit", bg="red", fg="white", 
       activebackground="red", activeforeground="yellow",
       command=killAll).pack(fill=BOTH, expand=1)
root.mainloop()
killAll()
